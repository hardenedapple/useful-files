$include /etc/inputrc

set editing-mode emacs
set bind-tty-special-chars off

set keymap vi-command
"\e[A":history-search-backward
"\e[B":history-search-forward
"\C-p":previous-history
"\C-n":next-history

set keymap vi-insert
"\e[A":history-search-backward
"\e[B":history-search-forward
"\C-u":unix-line-discard
"\C-p":previous-history
"\C-n":next-history
"\C-xe":emacs-editing-mode
# no need to lose all the emacs keybindings if they don't clash
"\C-e":end-of-line
"\C-a":beginning-of-line
"\C-k":kill-line

set keymap emacs
"\e[A":history-search-backward
"\e[B":history-search-forward
"\C-xv":vi-editing-mode
"\C-u":unix-line-discard
"\eM":character-search-backward
"\em":character-search
"\ew":copy-region-as-kill
"\eW":kill-region
"\eB":vi-backward-bigword
"\eF":vi-forward-bigword

set show-all-if-ambiguous on
set mark-symlinked-directories on
set skip-completed-text on
$if term=dumb
  # Disable querying when I request `possible-completions` especially inside
  # VSH (putting a bunch of text on the screen is not a problem when it's so
  # easily removed, and this would always let us use vim-completions to find
  # what we wanted.  Mentioning VSH since that's when I tend to have TERM=dumb.
  set completion-query-items -1
  # Do not paginate completions when there are a lot of options.  Similar to
  # above, this is the best option when in VSH since we are not directly
  # interacting with readline but rather bringing in the list of completions to
  # the current vim buffer.
  set page-completions off
$endif
